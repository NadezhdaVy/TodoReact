{"ast":null,"code":"var _jsxFileName = \"/Users/nadezda/Desktop/TodoReact/src/components/app/app.js\";\nimport React from 'react';\nimport TasksList from '../tasks-list';\nimport NewTask from '../new-task-form';\nimport Footer from '../footer';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      items: [this.createNewTask('Completed task'), this.createNewTask('Editing task'), this.createNewTask('Active task')],\n      filter: 'all'\n    };\n    this.addItem = text => {\n      const newItem = this.createNewTask(text);\n      this.setState(_ref => {\n        let {\n          items\n        } = _ref;\n        const newArr = [...items, newItem];\n        return {\n          items: newArr\n        };\n      });\n    };\n    this.currentFilter = (items, filter) => {\n      switch (filter) {\n        case 'all':\n          return items;\n        case 'active':\n          return items.filter(item => !item.completed);\n        case 'completed':\n          return items.filter(item => item.completed);\n        default:\n          return items;\n      }\n    };\n    this.deleteTask = id => {\n      this.setState(_ref2 => {\n        let {\n          items\n        } = _ref2;\n        const index = items.findIndex(el => el.id === id);\n        const newArr = [...items.slice(0, index), ...items.slice(index + 1)];\n        return {\n          items: newArr\n        };\n      });\n    };\n    this.editTask = id => {\n      this.setState(_ref3 => {\n        let {\n          items\n        } = _ref3;\n        return {\n          items: this.toggleProperty(items, id, 'editing')\n        };\n      });\n    };\n    this.clearAllCompleted = () => {\n      this.setState(_ref4 => {\n        let {\n          items\n        } = _ref4;\n        const newArr = items.filter(el => !el.completed);\n        return {\n          items: newArr\n        };\n      });\n    };\n    this.leftTasks = () => {\n      const countActiveTasks = this.state.items.filter(el => !el.completed).length;\n      return countActiveTasks;\n    };\n    this.completeTask = id => {\n      this.setState(_ref5 => {\n        let {\n          items\n        } = _ref5;\n        return {\n          items: this.toggleProperty(items, id, 'completed')\n        };\n      });\n    };\n    this.updateItem = (text, id) => {\n      this.setState(_ref6 => {\n        let {\n          items\n        } = _ref6;\n        return {\n          items: this.toggleProperty(items, id, 'editing', text)\n        };\n      });\n    };\n  }\n  changeFilter(filter) {\n    this.setState({\n      filter\n    });\n  }\n  createNewTask(value) {\n    return {\n      text: value,\n      completed: false,\n      editing: false,\n      id: this.maxId++,\n      date: new Date()\n    };\n  }\n  toggleProperty(arr, id, propName, val) {\n    const idx = arr.findIndex(el => el.id === id);\n    if (val === undefined) {\n      val = arr[idx].text;\n    }\n    const oldItem = arr[idx];\n    const newItem = {\n      ...oldItem,\n      [propName]: !oldItem[propName],\n      text: val\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n  render() {\n    const showTasks = this.currentFilter(this.state.items, this.state.filter);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n          onItemAdded: text => this.addItem(text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TasksList, {\n          onEdit: id => this.editTask(id),\n          onDeleted: id => this.deleteTask(id),\n          todos: showTasks,\n          onCompleted: id => this.completeTask(id),\n          onItemEditing: (text, id) => this.updateItem(text, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          onClearAllCompleted: () => this.clearAllCompleted(),\n          onFilterChange: filter => this.changeFilter(filter),\n          filter: this.state.filter,\n          itemsLeft: () => this.leftTasks(),\n          items: this.state.items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","TasksList","NewTask","Footer","App","Component","maxId","state","items","createNewTask","filter","addItem","text","newItem","setState","newArr","currentFilter","item","completed","deleteTask","id","index","findIndex","el","slice","editTask","toggleProperty","clearAllCompleted","leftTasks","countActiveTasks","length","completeTask","updateItem","changeFilter","value","editing","date","Date","arr","propName","val","idx","undefined","oldItem","render","showTasks"],"sources":["/Users/nadezda/Desktop/TodoReact/src/components/app/app.js"],"sourcesContent":["import React from 'react';\n\nimport TasksList from '../tasks-list';\nimport NewTask from '../new-task-form';\nimport Footer from '../footer';\n\nimport './app.css';\n\nexport default class App extends React.Component {\n  maxId = 100;\n\n  state = {\n    items: [\n      this.createNewTask('Completed task'),\n      this.createNewTask('Editing task'),\n      this.createNewTask('Active task'),\n    ],\n    filter: 'all',\n  };\n\n  addItem = (text) => {\n    const newItem = this.createNewTask(text);\n\n    this.setState(({ items }) => {\n      const newArr = [...items, newItem];\n      return {\n        items: newArr,\n      };\n    });\n  };\n\n  currentFilter = (items, filter) => {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.completed);\n      case 'completed':\n        return items.filter((item) => item.completed);\n      default:\n        return items;\n    }\n  };\n\n  deleteTask = (id) => {\n    this.setState(({ items }) => {\n      const index = items.findIndex((el) => el.id === id);\n      const newArr = [...items.slice(0, index), ...items.slice(index + 1)];\n      return {\n        items: newArr,\n      };\n    });\n  };\n\n  editTask = (id) => {\n    this.setState(({ items }) => ({\n      items: this.toggleProperty(items, id, 'editing'),\n    }));\n  };\n\n  clearAllCompleted = () => {\n    this.setState(({ items }) => {\n      const newArr = items.filter((el) => !el.completed);\n      return {\n        items: newArr,\n      };\n    });\n  };\n\n  leftTasks = () => {\n    const countActiveTasks = this.state.items.filter((el) => !el.completed).length;\n    return countActiveTasks;\n  };\n\n  completeTask = (id) => {\n    this.setState(({ items }) => ({\n      items: this.toggleProperty(items, id, 'completed'),\n    }));\n  };\n\n  updateItem = (text, id) => {\n    this.setState(({ items }) => ({\n      items: this.toggleProperty(items, id, 'editing', text),\n    }));\n  };\n\n  changeFilter(filter) {\n    this.setState({ filter });\n  }\n\n  createNewTask(value) {\n    return {\n      text: value,\n      completed: false,\n      editing: false,\n      id: this.maxId++,\n      date: new Date(),\n    };\n  }\n\n  toggleProperty(arr, id, propName, val) {\n    const idx = arr.findIndex((el) => el.id === id);\n    if (val === undefined) {\n      val = arr[idx].text;\n    }\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName], text: val };\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  render() {\n    const showTasks = this.currentFilter(this.state.items, this.state.filter);\n    return (\n      <div className=\"todoapp\">\n        <header className=\"header\">\n          <h1>Todo</h1>\n          <NewTask onItemAdded={(text) => this.addItem(text)} />\n        </header>\n        <main className=\"main\">\n          <TasksList\n            onEdit={(id) => this.editTask(id)}\n            onDeleted={(id) => this.deleteTask(id)}\n            todos={showTasks}\n            onCompleted={(id) => this.completeTask(id)}\n            onItemEditing={(text, id) => this.updateItem(text, id)}\n          />\n          <Footer\n            onClearAllCompleted={() => this.clearAllCompleted()}\n            onFilterChange={(filter) => this.changeFilter(filter)}\n            filter={this.state.filter}\n            itemsLeft={() => this.leftTasks()}\n            items={this.state.items}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}